<?php

/**
 * BasePlaylist
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $titre
 * @property integer $id_user
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Chansons
 * @property Doctrine_Collection $ChansonsPlaylists
 * 
 * @method string              getTitre()             Returns the current record's "titre" value
 * @method integer             getIdUser()            Returns the current record's "id_user" value
 * @method sfGuardUser         getSfGuardUser()       Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getChansons()          Returns the current record's "Chansons" collection
 * @method Doctrine_Collection getChansonsPlaylists() Returns the current record's "ChansonsPlaylists" collection
 * @method Playlist            setTitre()             Sets the current record's "titre" value
 * @method Playlist            setIdUser()            Sets the current record's "id_user" value
 * @method Playlist            setSfGuardUser()       Sets the current record's "sfGuardUser" value
 * @method Playlist            setChansons()          Sets the current record's "Chansons" collection
 * @method Playlist            setChansonsPlaylists() Sets the current record's "ChansonsPlaylists" collection
 * 
 * @package    sonor
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlaylist extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('playlist');
        $this->hasColumn('titre', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('id_user', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'id_user',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Chanson as Chansons', array(
             'refClass' => 'ChansonsPlaylists',
             'local' => 'id_playlist',
             'foreign' => 'id_chanson'));

        $this->hasMany('ChansonsPlaylists', array(
             'local' => 'id',
             'foreign' => 'id_playlist'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'titre',
             ),
             'name' => 'slug',
             'type' => 'string',
             'length' => 255,
             'unique' => true,
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}